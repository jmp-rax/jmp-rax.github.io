<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jmp-rax.github.io/</id><title>JMP_RAX</title><subtitle>JMP_RAX. Dev blog. Unix, Linux, Windows, programming, software engineering, sogtware developer, C, C++, Python, Reverse Engineering, CTF's, althorithms, data structures, musings.</subtitle> <updated>2022-01-11T20:17:38-05:00</updated> <author> <name>jmp_rax</name> <uri>https://jmp-rax.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jmp-rax.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://jmp-rax.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 jmp_rax </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Universal Asynchronous Receiver Transceiver</title><link href="https://jmp-rax.github.io/posts/universal-asynchronous-receiver-transceiver/" rel="alternate" type="text/html" title="Universal Asynchronous Receiver Transceiver" /><published>2022-01-10T22:22:00-05:00</published> <updated>2022-01-10T22:22:00-05:00</updated> <id>https://jmp-rax.github.io/posts/universal-asynchronous-receiver-transceiver/</id> <content src="https://jmp-rax.github.io/posts/universal-asynchronous-receiver-transceiver/" /> <author> <name>jmp_rax</name> </author> <category term="UART" /> <category term="embedded" /> <category term="protocol" /> <category term="note" /> <summary> This article is a personal note I took to help remember the gist of UART UART Universal Asynchronous Receiver/Transmitter 1 0 1 0 1 0 1 0 Tx ‾‾‾|_|‾|_|‾|_|‾|_|‾|_|‾‾‾‾ Rx ^ start bit ^^ stop bit Field Summary Wires 2 Speed 9600, 19200, 38400, 57600, 115200, 230400, 460800, 921600, 1000000, 15... </summary> </entry> <entry><title>Serial Peripheral Interface</title><link href="https://jmp-rax.github.io/posts/serial-peripheral-interface/" rel="alternate" type="text/html" title="Serial Peripheral Interface" /><published>2022-01-10T22:22:00-05:00</published> <updated>2022-01-10T22:22:00-05:00</updated> <id>https://jmp-rax.github.io/posts/serial-peripheral-interface/</id> <content src="https://jmp-rax.github.io/posts/serial-peripheral-interface/" /> <author> <name>jmp_rax</name> </author> <category term="SPI" /> <category term="embedded" /> <category term="protocol" /> <category term="note" /> <summary> This article is a personal note I took to help remember the gist of SPI SPI Serial Peripheral Interface &amp;gt;&amp;gt; Traditional 4wire SPI &amp;lt;&amp;lt; Data being written cs ‾‾‾‾|__________________|‾‾‾‾‾‾‾‾ cs Tx 0 1 0 1 0 1 0 1 mosi ‾‾‾|_|‾|_|‾|_|‾|_|‾‾‾‾‾‾‾‾‾‾‾‾‾ sdi Rx 1 0 1 0 1 0 1 0 miso ‾‾‾‾‾‾|_|‾|_|‾|_|‾|_|‾‾‾‾‾‾‾‾‾‾ sdo clock pulse sck ‾|_|‾|_|‾|_|‾|_|‾|_|‾|_|‾|_|‾|_ ... </summary> </entry> <entry><title>rewriting git history</title><link href="https://jmp-rax.github.io/posts/rewriting-git-history/" rel="alternate" type="text/html" title="rewriting git history" /><published>2021-05-27T18:27:00-04:00</published> <updated>2021-05-27T18:27:00-04:00</updated> <id>https://jmp-rax.github.io/posts/rewriting-git-history/</id> <content src="https://jmp-rax.github.io/posts/rewriting-git-history/" /> <author> <name>jmp_rax</name> </author> <category term="git" /> <summary> Rewriting Git History This is actually a repost of an older post I had written. Prolouge I recognized in my most recent git projects. I was using the wrong email / user information for my repositories. While annoying I figured this could be a learning event. Keep in mind rewriting git history in most situations is a bad idea. However This is an opportunity to dive further into the depths... </summary> </entry> </feed>
